name: GameCI Template 🎮

on:
  push: 
    branches:
      - develop 
  workflow_dispatch:

jobs:
  buildAndTestForLinuxBasedPlatforms:
    permissions: write-all
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2022.3.23f1
        targetPlatform:
          - StandaloneLinux64
          - StandaloneOSX
          - iOS 
          - Android
          - WebGL
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.2.0
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build

# jobs:
#   testRunner:
#     permissions: write-all
#     name: Test in ${{ matrix.testMode }} ✨
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         testMode:
#           - EditMode
#           - PlayMode
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Create LFS file list
#         run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

#       - name: Restore LFS cache
#         uses: actions/cache@v4
#         id: lfs-cache
#         with:
#           path: .git/lfs
#           key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

#       - name: Git LFS Pull
#         run: |
#           git lfs pull
#           git add .
#           git reset --hard

#       - name: Restore Library cache
#         uses: actions/cache@v4
#         with:
#           path: Library
#           key: Library-test-project-${{ matrix.targetPlatform }}
#           restore-keys: |
#             Library-test-project-
#             Library-

#       - name: Run tests
#         uses: game-ci/unity-test-runner@v4
#         env:
#             UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#             UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#             UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}    
#         id: testRunner
#         with:
#           testMode: ${{ matrix.testMode }}
#           checkName: ${{ matrix.testMode }} test results
#           githubToken: ${{ secrets.GITHUB_TOKEN }}

#       - uses: actions/upload-artifact@v4
#         with:
#           name: Test results (${{ matrix.testMode }})
#           path: ${{ steps.testRunner.outputs.artifactsPath }}

#   buildWebGL:
#     permissions: write-all
#     needs: testRunner
#     name: Build for WebGL 🖥️
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Create LFS file list
#         run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

#       - name: Restore LFS cache
#         uses: actions/cache@v4
#         id: lfs-cache
#         with:
#           path: .git/lfs
#           key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

#       - name: Git LFS Pull
#         run: |
#           git lfs pull
#           git add .
#           git reset --hard

#       - name: Restore Library cache
#         uses: actions/cache@v4
#         with:
#           path: Library
#           key: Library-build-WebGL
#           restore-keys: |
#             Library-build-
#             Library-

#       - uses: game-ci/unity-builder@v4
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}    
#         with:
#           targetPlatform: WebGL

#       - uses: actions/upload-artifact@v4
#         with:
#           name: build-WebGL
#           path: build/WebGL
  
#   buildWindows:
#     permissions: write-all
#     needs: testRunner
#     name: Build for Windows 🖥️
#     runs-on: ubuntu-latest
#     strategy:
#         fail-fast: false
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Create LFS file list
#         run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

#       - name: Restore LFS cache
#         uses: actions/cache@v4
#         id: lfs-cache
#         with:
#             path: .git/lfs
#             key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

#       - name: Git LFS Pull
#         run: |
#             git lfs pull
#             git add .
#             git reset --hard

#       - name: Restore Library cache
#         uses: actions/cache@v4
#         with:
#           path: Library
#           key: Library-build-StandaloneWindows64
#           restore-keys: |
#             Library-build-
#             Library-

#       - uses: game-ci/unity-builder@v4
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#             targetPlatform: StandaloneWindows64

#       - uses: actions/upload-artifact@v4
#         with:
#             name: build-StandaloneWindows64
#             path: build/StandaloneWindows64